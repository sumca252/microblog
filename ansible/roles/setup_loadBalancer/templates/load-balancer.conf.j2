http {
    upstream app-hosts {
        server {{ groups['appServer'][0] }}:8000;
    }

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # This server accepts all traffic to port 80 and passes it to the upstream. 
    # Notice that the upstream name and the proxy_pass need to match.

    server {
       listen 80;
       server_name  {{ domain_name }} www.{{ domain_name }};
       return 301 https://$server_name$request_uri;
    
       #location / {
       #   proxy_pass http://app-hosts;
       #}
    }
    server {
       listen 443 ssl;
       server_name  {{ domain_name }} www.{{ domain_name }};
       add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";
       add_header Content-Security-Policy "default-src 'self' cdnjs.cloudflare.com; img-src 'self' cdnjs.cloudflare.com; www.gravatar.com" always;

       add_header X-Frame-Options "SAMEORIGIN" always;
       
       add_header X-XSS-Protection "0" always;    
       
       add_header X-Content-Type-Options "nosniff" always;     
       
             
       expires 1y;
       add_header Cache-Control "public, no-transform";
       
       add_header Set-Cookie "Path=/; HttpOnly; Secure";
       
       add_header Referrer-Policy "no-referrer-when-downgrade" always;      
       
       add_header Feature-Policy "camera 'none'; microphone 'none'; geolocation 'none'" always;
       
       add_header Permissions-Policy "camera=(), microphone=(), geolocation=() interest-cohort=()" always;
       
       add_header X-Permitted-Cross-Domain-Policies "none" always;
       server_tokens off;

       ssl_certificate /etc/letsencrypt/live/{{ domain_name }}/cert.pem;
       ssl_certificate_key /etc/letsencrypt/live/{{ domain_name }}/privkey.pem;
       ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

       location / {
          proxy_pass http://app-hosts;
          proxy_cookie_path / "/; secure; HttpOnly; SameSite=strict";
       }
       
       location /metrics {
          stub_status on;
       }

       location /grafana/ {
          proxy_pass http://{{ groups['monitoring'][0] }}:3000/;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-Host $host;
          proxy_set_header X-Forwarded-Server $host;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
       }
    }
}